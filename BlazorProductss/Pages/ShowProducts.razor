@page "/showproducts"
@using BlazorProductss.Data
@using BlazorProductss.Models
@using BlazorProductss.Services
@inject ProductDataService ProductService
<style>
    .moverclass {
        background-color:yellow;
    }
    #mytable tr:hover{
        background-color:lightblue;
    }
</style>


<h1>All Producs</h1>


@if ((PList == null) || (CList == null))
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row" style="padding-top:10px" tabindex="0" @onkeydown="((e) => keyDownDiv(e))">
        <div class="col-md-3">
            <select class="form-control" @onchange="CategoryClicked">
                <option value="">-- Select Category --</option>
                @foreach (var cat in CList)
                {
                <option value="@cat.CategoryId">@cat.CategoryName</option>
                }
            </select>
        </div>
        <div class="col-md-9">
            <table id="mytable" class="table table-striped">
                <thead>
                    <tr>
                        <th>ProductId</th>
                        <th>ProductName (C)</th>
                        <th>Price (F)</th>
                        <th>CategoryId</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int rownum = 0;
                    }
                    @foreach (var pr in PList)
                    {
                        @*<tr @onmouseover="(()=>mouseoverhandler(rownum))"  class="@mclass">*@
                        <tr @onclick="((e)=>rowclickhandler(e,pr.ProductId))" style="@mclass">
                            <td>@pr.ProductId</td>
                            <td>@pr.ProductName</td>
                            <td>@pr.Price</td>
                            <td>@pr.CategoryId</td>
                        </tr>
                        rownum++;
                    }
                </tbody>
            </table>
 
        </div>
        </div>
 
}
<div id="pdetail" style="@mdetail">@proddata</div>
@code {
    List<Products> PList;
    List<Categories> CList;
    string mclass = "";
    string mdetail = "";
    string proddata = "";

    protected override async Task OnInitializedAsync()
    {
        PList = await ProductService.GetAllProducts();
        CList = await ProductService.GetCategories();
    }
    protected void mouseoverhandler(int rownum)
    {
        //this.mclass = "moverclass";
        this.mclass = "background-color:green";
    }
    protected void keyDownDiv(KeyboardEventArgs ev)
    {
        if (ev.Key == "Escape")
            mdetail = "display:none";
    }
    protected async void rowclickhandler(MouseEventArgs ev,int prodid)
    { 
        // UIEventArgs, UIMouseEventArgs are in old version of Blazor. 
        // Replace these with without UI
        //this.mclass = "moverclass";
        //this.mclass = "background-color:green";
        var prod = await ProductService.GetProductById(prodid);
        proddata = prod.ProductId.ToString() + ":" + prod.ProductName + ":" + prod.Price.ToString();
        int top = (int)ev.ClientY + 10;
        int left = (int)ev.ClientX + 5;
        mdetail = "border:1px solid red;background-color:yellow;color:red;left:"
            + left + "px;top:" + top + "px;position:absolute;width:400px";
    }

    protected async void CategoryClicked(ChangeEventArgs catEvent)
    {
        //CList.Clear(); // no need for it - it maintains state
        //CList = await ProductService.GetCategories();
        var catId = int.Parse(catEvent.Value.ToString());
        PList = await ProductService.GetProductsByCatId(catId);
        this.StateHasChanged();
    }
}
